<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAB4AAAAoCAYAAADpE0oSAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wwAADsMBx2+oZAAAABh0RVh0U29mdHdhcmUAcGFpbnQubmV0IDQuMS41ZEdYUgAABGdJREFUWEe1WEtv
        G1UYTTyTGCtPohBcx/E7fjR2bMd1mjhxXo2ch1KUBKVKBITKoFIFC4nAIghWCLJpqRAgIAvYlB1/gAVi
        0w1ILFixYscfYMP6cM83M66tpEA0t0c6mpnvft898925z+n4vygWi8NTU1MolUrglQyHwxgbG0MwGBy2
        3fRCiS7NzMxgY2MD29vbciWrO3vILq4iGo1SfMl21wMl2qhUKiLYyvlXXserD77G4f2vkNncQSKRoHjD
        DnOPhYUFzM7OolqtYnNzs8nRN97DrY8/FQbunEC9IIVhh7nH9PQ01tfXsby8jGQy2WQgW2hjT08Puru7
        KfzIinQJdh427draGvL5PLa2trC6uir3rQwEAkIVMmBFuoRqvj/ZtJOTk/D7/SL6c6gfnwX6cSPox8uj
        zzWftTY1wV5Ler1evPbiOk6SITyMP4+jwz3hccSPb0PPUvgHO0QPVMe5n0qlMD4+jntv7uHBu3V88n4D
        jz4/Fn549xZquZDebB2obG7H43FkMhnc3b2Bv378Er9+8wF++ugQD49qWLw69nSEjXL8F1+tgEgkgmw2
        i1qliHIuiUJiFFf6usVmu+qDEv3b2C6jw/Cgs7PzMdMBeKaiclWfw2e764NRyWLk6G0Y8zkYM+PwXUvI
        hGEYBnw+H3pyMmVGbXc98FwN3jTrR6iffYGut45hvlASUWem4qxGah1KSvTEM5+GeXvP4ku7KuMk2MMp
        zF5O9vfLGD61w9xDCcPcnYa5WYRHNbGnFMNQJCjZUZi9fHFxEblcjrbv7DB3UKK/seOIcC0vnYgv0tXV
        1RTmleIk7+1Qd6CI6s0izCupzEJHuFAoCG2bwTgt6E4F0Xc9LasTF4pYLAbTNGXn4WS8tLQk1JYxwcqc
        XQfJeydbki9CDg0N0f69HeYeFHFEHbYKO1Su+rIlKDI3N9cU5T1tg4ODbVSu2oXT/J7lclnIe28hCmNV
        zWAOKymh6oy/22F6IGNZDScZVoryvFNuPgs53JTdDtGDi4SNlWy78HoBnnyYZTk7zD1EWM1cTWG14HuK
        EZg3S+3iurMW4RYBo5qxmrulFYRbU09ZuJIUAZlONx63BKlNWFX0R+v35FrMqVPZYxQxridgruXhj4ct
        jukTtppU7T645eGuQ5mfsUqtco7rs7Mz2XfzqszuxUVYZcrKT09PnX1Vs2KvmstZtr+/j5WVFRFXZj3C
        fdWsVH5wcCDLnzI3K6adtkajgVAohHq97l5Yid4zZpMiyh0HsxkZGWGl71geljAPcyzn8WVgYECLsHxf
        Vs6FYHh4+FylLOMLcVmkz8TEhB7hK5GQnJnYjNxRKnPQKrVgpoPS6ShOYe5OlLnN59LwXItJti2nwHOZ
        OD7sWHxBZTrncymoyiq9ExHZQfLMS/L8q7Kq2C7/6tPqdykwCzYd/wZwB0myE5HKfudJPs6fg1a/S8Gp
        lOT/D35D5xcEbU/yucjvUuA5uLe3t0nuqRzy+b98Wv0uRkfHPwiut8RnoIEcAAAAAElFTkSuQmCC
</value>
  </data>
</root>